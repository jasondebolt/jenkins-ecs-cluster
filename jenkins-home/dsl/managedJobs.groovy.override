
def numberOfCopies = getEnvProperty('NumberOfCopies', '1').toInteger()
def generatedJobs = new java.util.LinkedList<String>()

(1..numberOfCopies).each{ i->

    job(generateJobName(generatedJobs, "BashForLoop", i)) {
        description("Bash Loop 1")
        label('java-runner')
        steps {
            shell('''
#!/bin/bash
set -e

for number in {1..1000000}
do
    echo "$number"
done

echo Done
''')
        }
    }

    job(generateJobName(generatedJobs, "BashForLoop2", i)) {
        description("Bash Loop 2")
        label('cpp-runner')
        steps {
            shell('''
#!/bin/bash
set -e

for number in {1..1000000}
do
    echo "$number"
done

echo Done
''')
        }
    }

}

//create job to run all the generated jobs above and trigger it
def runAllName = 'RUN_ALL_JOBS'
println "Creating job to run all jobs: $generatedJobs"
job(runAllName) {
    description "Run all the generated jobs to test auto-scaling feature"
    publishers {
        downstream generatedJobs
    }
}

private String generateJobName(List<String> generatedJobs, String projectName, int i){
    String jobName = "$projectName-$i"
    generatedJobs.add(jobName)
    jobName
}

private def getEnvProperty(String name, def defaultValue) {
    try {
        getProperty(name)
    } catch (MissingPropertyException e) {
        defaultValue
    }
}
